name: Deploy to PyPi
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    name: Build Wheels and Package 🛠️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Poetry
        run: python -m pip install poetry
      - name: Build Module
        run: poetry build
  publish_test:
    name: Publish to TestPyPi 🧪
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: test_pypi
      url: https://test.pypi.org/p/simvue
    permissions:
      id-token: write
    steps:
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
  publish:
    name: Publish to PyPi 🐍📦
    needs:
      - publish_test
    if: github.ref =~ '^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$'
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/simvue
    permissions:
      id-token: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Poetry
        run: python -m pip install poetry
      - name: Build Module
        run: poetry build
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
  github-release:
    name: Create Signed GitHub Release 🔏
    needs:
      - publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
